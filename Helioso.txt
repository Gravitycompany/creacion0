local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))();
local Window = Library.CreateLib("Age of PaPitAs", "Ocean");
local Tab = Window:NewTab("AutoFarm Menu");
local MainSection = Tab:NewSection("AutoFarm Menu");
local TargetTab = Window:NewTab("Player Menu");
local TargetSection = TargetTab:NewSection("Player Menu");
local STab = Window:NewTab("Self Menu");
local SSection = STab:NewSection("Self Menu");
local StatTab = Window:NewTab("AutoStat Menu");
local StatSection = StatTab:NewSection("AutoStat Menu");
local TTab = Window:NewTab("Teleport Menu");
local TSection = TTab:NewSection("Teleport Menu");
local KTab = Window:NewTab("Keybind Menu");
local KSection = KTab:NewSection("Keybind Menu");
local MTab = Window:NewTab("Misc Menu");
local MSection = MTab:NewSection("Misc Menu");
_G.CToggle = false;
_G.metalskin = false;
_G.LOCALPLAYER = game.Players.LocalPlayer.Name;
_G.bring = false;
player = game.Players.LocalPlayer;
breakvelocity = function()
	spawn(function()
		local BeenASecond, V3 = false, Vector3.new(0, 0, 0);
		delay(1, function()
			BeenASecond = true;
		end);
		while not BeenASecond do
			for _, v in ipairs(player.Character:GetDescendants()) do
				if v.IsA(v, "BasePart") then
					v.Velocity, v.RotVelocity = V3, V3;
				end
			end
			wait();
		end
	end);
end;
plrlist = {};
plrnum = 0;
getNearPlayer = function(maxDistance)
	pcall(function()
		if (player and player.Character) then
			local playerLocation = player.Character.HumanoidRootPart.Position;
			for i, v in pairs(game.Players:GetChildren()) do
				if (v.Character and (v.Character.Health ~= 0)) then
					local location = v.Character.HumanoidRootPart.Position;
					if (((location - playerLocation).Magnitude <= maxDistance) and (v.Character.Health ~= 0)) then
						pcall(function()
							if (v == player) then
							else
								local teleexist = game:GetService("Workspace")[v.Name].HumanoidRootPart;
								if (not teleexist:FindFirstChild("telekinesisPosition") and (v.Character.Health ~= 0)) then
								elseif (v ~= player) then
									plrnum += 1
									table.insert(plrlist, v.Character);
								end
							end
						end);
					end
				end
			end
		end
	end);
end;
GetList = function()
	x = 1;
	Plyr = game.Players:GetPlayers();
	dropdown = {};
	for value in pairs(Plyr) do
		PLR = Plyr[x].Name;
		x += 1
		table.insert(dropdown, PLR);
	end
end;
TSection:NewToggle("Bring Mode", "", function(state)
	if state then
		_G.bring = true;
	else
		_G.bring = false;
	end
end);
TSection:NewButton("Bar", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 1000, 149);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1313, 197, 149);
	end
	breakvelocity();
end);
TSection:NewButton("Building Park", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1748.5, 1000, 1269);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1749, 789, 1269);
	end
	breakvelocity();
end);
TSection:NewButton("City Square", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 1000, 256);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-385, 86, 256);
	end
	breakvelocity();
end);
TSection:NewButton("Contruction Building", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(650, 1300, 284);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(650, 779, 284);
	end
	breakvelocity();
end);
TSection:NewButton("Corner 1", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2773, 1000, -4996);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2773, 96, -4996);
	end
	breakvelocity();
end);
TSection:NewButton("Corner 2", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3757, 1000, -3801);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3757, 97, -3801);
	end
	breakvelocity();
end);
TSection:NewButton("Corner 3", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3650, 1000, 2764);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3650, 97, 2764);
	end
	breakvelocity();
end);
TSection:NewButton("Corner 4", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2809, 1000, 2821);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2810, 102, 2821);
	end
	breakvelocity();
end);
TSection:NewButton("Evil Lair", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-905, 1000, -1086);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-905, 94, -1086);
	end
	breakvelocity();
end);
TSection:NewButton("Feild", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2354, 1000, 4);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2355, 81, 4);
	end
	breakvelocity();
end);
TSection:NewButton("Hero HQ", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 1700, 2748);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 169, 2748);
	end
	breakvelocity();
end);
TSection:NewButton("Hero Lair", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1880, 1000, -1693);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1880, 104, -1694);
	end
	breakvelocity();
end);
TSection:NewButton("Ignite Tower", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70, 1000, -247);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70, 616, -247);
	end
	breakvelocity();
end);
TSection:NewButton("Military base", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 1000, -4639);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(259, 99, -4639);
	end
	breakvelocity();
end);
TSection:NewButton("Motel", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1749.87, 1000, -1348.98);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1750, 94, -1349);
	end
	breakvelocity();
end);
TSection:NewButton("Mountain", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2206.33, 1500, -2425.4);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2206, 817, -2425);
	end
	breakvelocity();
end);
TSection:NewButton("Mountain 2", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2431.85, 1500, -2363.88);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2429, 762, -2363);
	end
	breakvelocity();
end);
TSection:NewButton("Mountain Hole", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2732, 1256, -1776);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2732, 256, -1776);
	end
	breakvelocity();
end);
TSection:NewButton("Park", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1399, 1000, 1154);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1399, 94, 1154);
	end
	breakvelocity();
end);
TSection:NewButton("Plains", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3683, 1000, -144);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3683, 97, -144);
	end
	breakvelocity();
end);
TSection:NewButton("Police Station", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62, 1000, -480);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62, 94, -480);
	end
	breakvelocity();
end);
TSection:NewButton("Prison", "", function()
	if (_G.bring == true) then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-779, 1000, -2594);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-779, 269, -2594);
	end
	breakvelocity();
end);
TSection:NewButton("Secret Area", "", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1100, 61, -1169);
	breakvelocity();
end);
TSection:NewButton("Secret Cave", "", function()
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(269, -59, 2729);
	breakvelocity();
end);
StatSection:NewDropdown("AutoStats", "", {"vitality","healing","strength","energy","flight","speed","climbing","swinging","fireball","frost","lightning","power","telekinesis","shield","laserVision","metalSkin"}, function(currentOption)
	selectedstat = currentOption;
end);
StatSection:NewToggle("Toggle AutoStats", "", function(state)
	if state then
		getgenv().AutoStats = true;
		while AutoStats do
			wait(0.1);
			spawn(function()
				game:GetService("ReplicatedStorage").Events.UpgradeAbility:InvokeServer(selectedstat);
			end);
		end
	else
		spawn(function()
			getgenv().AutoStats = false;
		end);
	end
end);
MainSection:NewToggle("Autofarm Orbs", "", function(state)
	if state then
		getgenv().OrbFarm = true;
		repeat
			local Playerhead = game.Players.LocalPlayer.Character.Head;
			spawn(function()
				for i, v in pairs(game:GetService("Workspace").ExperienceOrbs:GetDescendants()) do
					if ((v.Name == "TouchInterest") and v.Parent) then
						firetouchinterest(Playerhead, v.Parent, 0);
					end
				end
			end);
			wait(15);
		until OrbFarm == false 
	else
		spawn(function()
			getgenv().OrbFarm = false;
		end);
	end
end);
MainSection:NewToggle("Laser Civilian Farm", "", function(state)
	if state then
		getgenv().LaserC = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserC = true;
			while LaserC and part do
				wait();
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Civilian") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserC = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("Laser Police Farm", "", function(state)
	if state then
		getgenv().LaserV = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserV = true;
			while LaserV and part do
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Police") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
				wait();
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserV = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("Laser Thug Farm", "", function(state)
	if state then
		getgenv().LaserH = true;
		coroutine.resume(coroutine.create(function()
			local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
			local part = event:InvokeServer(true);
			getgenv().LaserH = true;
			while LaserH and part do
				wait();
				for i, v in pairs(game.Workspace:GetChildren()) do
					if ((v.ClassName == "Model") and (v.Name == "Thug") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						part.Position = v.HumanoidRootPart.Position;
					end
				end
			end
			event:InvokeServer(false);
		end));
	else
		spawn(function()
			getgenv().LaserH = false;
		end);
		breakvelocity();
	end
end);
MainSection:NewToggle("Civilian Farm", "", function(state)
	if state then
		CivilianX = player.Character.HumanoidRootPart.Position['X'];
		CivilianY = player.Character.HumanoidRootPart.Position['Y'];
		CivilianZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Civilian = true;
		while Civilian do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Civilian") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Civilian = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(CivilianX, CivilianY, CivilianZ);
		end);
	end
end);
MainSection:NewToggle("Police Farm", "", function(state)
	if state then
		PoliceX = player.Character.HumanoidRootPart.Position['X'];
		PoliceY = player.Character.HumanoidRootPart.Position['Y'];
		PoliceZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Police = true;
		while Police do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Police") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Police = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(PoliceX, PoliceY, PoliceZ);
		end);
	end
end);
MainSection:NewToggle("Thug Farm", "", function(state)
	if state then
		thugX = player.Character.HumanoidRootPart.Position['X'];
		thugY = player.Character.HumanoidRootPart.Position['Y'];
		thugZ = player.Character.HumanoidRootPart.Position['Z'];
		getgenv().Thug = true;
		while Thug do
			wait(0.2);
			pcall(function()
				
				for i, v in pairs(game.Workspace:GetChildren()) do
                                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					if ((v.ClassName == "Model") and (v.Name == "Thug") and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
						game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2);
					end
				end
			end);
		end
	else
		spawn(function()
			getgenv().Thug = false;
			wait(0.2);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(thugX, thugY, thugZ);
		end);
	end
end);
SSection:NewToggle("Spawn Point", "", function(state)
	if state then
		getgenv().Deathcheck = true;
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		spawn(function()
			while Deathcheck do
				local player = game.Players.LocalPlayer.Character.Humanoid.Health;
				if (player == 0) then
					wait(6.5);
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
				wait(1);
			end
		end);
	else
		spawn(function()
			getgenv().Deathcheck = false;
		end);
	end
end);
SSection:NewToggle("Rapid Punch", "", function(state)
	if state then
		getgenv().rapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (rapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().rapid = false;
		end);
	end
end);
SSection:NewToggle("Rapid Heavy Punch", "", function(state)
	if state then
		getgenv().Hrapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (Hrapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().Hrapid = false;
		end);
	end
end);
SSection:NewToggle("Super Rapid Punch", "", function(state)
	if state then
		getgenv().superrapid = true;
		local UserInputService = game:GetService("UserInputService");
		local function onInputEnded(inputObject, gameProcessedEvent)
			if gameProcessedEvent then
				return;
			end
			if (superrapid == true) then
				if (inputObject.UserInputType == Enum.UserInputType.MouseButton1) then
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
						game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					end);
				end
			end
		end
		UserInputService.InputEnded:Connect(onInputEnded);
	else
		spawn(function()
			getgenv().superrapid = false;
		end);
	end
end);
getRoot = function(char)
	local rootPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso");
	return rootPart;
end;
Players = game:GetService("Players");
SSection:NewButton("Name Esp", "", function()
	local esp_settings = {textsize=20};
	local gui = Instance.new("BillboardGui");
	local esp = Instance.new("TextLabel", gui);
	gui.Name = "esp";
	gui.ResetOnSpawn = false;
	gui.AlwaysOnTop = true;
	gui.LightInfluence = 0;
	gui.Size = UDim2.new(1.75, 0, 1.75, 0);
	esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
	esp.Text = "";
	esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
	esp.BorderSizePixel = 4;
	esp.BorderColor3 = Color3.new(255, 255, 255);
	esp.BorderSizePixel = 0;
	esp.Font = "SourceSansSemibold";
	esp.TextSize = esp_settings.textsize;
	esp.TextColor3 = Color3.fromRGB(255, 255, 255);
	getgenv().esp = true;
	game:GetService("RunService").RenderStepped:Connect(function()
		for i, v in pairs(game:GetService("Players"):GetPlayers()) do
			if ((v ~= game:GetService("Players").LocalPlayer) and Players.LocalPlayer.Character and (v.Character.Head:FindFirstChild("esp") == nil)) then
				esp.Text = "Name: " .. v.Name .. "";
				gui:Clone().Parent = v.Character.Head;
			end
		end
	end);
end);
SSection:NewToggle("Immortality", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-320, 86, 271);
		wait(0.2);
		player.Character.UpperTorso.Waist:Destroy();
		player.Character.Head.Anchored = true;
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Invisibility", "", function(state)
	if state then
		local varX = player.Character.UpperTorso.Position['X'];
		local varY = player.Character.UpperTorso.Position['Y'];
		local varZ = player.Character.UpperTorso.Position['Z'];
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2711, 229, -1769);
		wait(0.2);
		game:GetService("Workspace")[_G.LOCALPLAYER].LowerTorso.Root:Destroy();
		wait(2);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	else
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		player.Character:BreakJoints();
		wait(6.5);
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
	end
end);
SSection:NewToggle("Hide Title Gui", "", function(state)
	if state then
		getgenv().hide = true;
		while hide do
			wait();
			if game.Players.LocalPlayer.Character then
				local rP = game.Players.LocalPlayer.Character.HumanoidRootPart;
				if (rP and rP:FindFirstChild("titleGui")) then
					rP.titleGui:Destroy();
				end
			end
		end
	else
		spawn(function()
			getgenv().hide = false;
		end);
	end
end);
SSection:NewToggle("Antitelekinesis", "", function(state)
	if state then
		getgenv().localtele = true;
		spawn(function()
			while localtele do
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.LOCALPLAYER].Character);
				wait();
			end
		end);
	else
		spawn(function()
			getgenv().localtele = false;
		end);
	end
end);
SSection:NewToggle("Telekinesis Space Fling", "", function(state)
	if state then
		getgenv().telesauras = true;
		while telesauras do
			wait(0.2);
			spawn(function()
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(999999, 999999, 999999), true);
				game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(999999, 999999, 999999), false);
			end);
		end
	else
		spawn(function()
			getgenv().telesauras = false;
		end);
	end
end);
SSection:NewToggle("Safe Teleport", "", function(state)
	if state then
		local player1 = game.Players.LocalPlayer.Character.Humanoid.Health;
		local math = player1 / 3;
		getgenv().st = true;
		while st do
			task.wait();
			spawn(function()
				local player = game.Players.LocalPlayer.Character.Humanoid.Health;
				if (player < math) then
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.LOCALPLAYER].Character);
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1368.27539, 195.429108, 195.75, 0, 0, -1, 0, 1, 0, 1, 0, 0);
				end
			end);
		end
	else
		spawn(function()
			getgenv().st = false;
		end);
	end
end);
SSection:NewToggle("AntiKnockback", "", function(state)
	if state then
		getgenv().AntiKnockback = true;
		while AntiKnockback do
			task.wait();
			spawn(function()
				local PrimaryPart = player.Character.PrimaryPart;
				if ((PrimaryPart.AssemblyLinearVelocity.Magnitude > 250) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 250)) then
					PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.CFrame = LastPosition;
				elseif ((PrimaryPart.AssemblyLinearVelocity.Magnitude < 50) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 50)) then
					LastPosition = PrimaryPart.CFrame;
				end
			end);
		end
	else
		spawn(function()
			getgenv().AntiKnockback = false;
		end);
	end
end);
SSection:NewToggle("Anchor Root Part", "", function(state)
	if state then
		player.Character.HumanoidRootPart.Anchored = true;
	else
		player.Character.HumanoidRootPart.Anchored = false;
	end
end);
MSection:NewSlider("Speed", "", 1500, 16, function(s)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s;
end);
MSection:NewSlider("Jump", "", 350, 50, function(s)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = s;
end);
MSection:NewButton("Inf jump", "", function()
	game:GetService("UserInputService").JumpRequest:connect(function()
		game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping");
	end);
end);
MSection:NewButton("Destroy Safezone & Parts", "", function()
	game:GetService("Workspace").City.Buildings:Destroy();
	game:GetService("Workspace").City.Interactive.Bank.Model:Destroy();
	game:GetService("Workspace").City.Interactive["Police Station"]:GetChildren()[28]:Destroy();
	game:GetService("Workspace").City.Interactive.Grove.WareHouse:Destroy();
	game:GetService("Workspace").City.Interactive["Main Plaza"]:GetChildren()[38]:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
	game:GetService("Workspace").SafeZones.Barrier:Destroy();
end);
MSection:NewButton("AntiLag", "", function()
	local Terrain = workspace:FindFirstChildOfClass("Terrain");
	Terrain.WaterWaveSize = 0;
	Terrain.WaterWaveSpeed = 0;
	Terrain.WaterReflectance = 0;
	Terrain.WaterTransparency = 0;
	settings().Rendering.QualityLevel = 1;
	for i, v in pairs(game:GetDescendants()) do
		if (v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart")) then
			v.Material = "Plastic";
			v.Reflectance = 0;
		elseif v:IsA("Decal") then
			v.Transparency = 1;
		elseif (v:IsA("ParticleEmitter") or v:IsA("Trail")) then
			v.Lifetime = NumberRange.new(0);
		elseif v:IsA("Explosion") then
			v.BlastPressure = 1;
			v.BlastRadius = 1;
		end
	end
	workspace.DescendantAdded:Connect(function(child)
		coroutine.wrap(function()
			if child:IsA("ForceField") then
				RunService.Heartbeat:Wait();
				child:Destroy();
			elseif child:IsA("Sparkles") then
				RunService.Heartbeat:Wait();
				child:Destroy();
			elseif (child:IsA("Smoke") or child:IsA("Fire")) then
				RunService.Heartbeat:Wait();
				child:Destroy();
			end
		end)();
	end);
end);
MSection:NewButton("Ground Crack Lag", "", function(state)
	for i = 1, 1000 do
		game:GetService("ReplicatedStorage").Events.GroundCrack:FireServer();
	end
end);
MSection:NewButton("Mini Crash", "", function(state)
	local x = 0;
	repeat
		x += 1
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 5000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait();
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Server Crasher", "", function(state)
	local x = 0;
	repeat
		x += 1
		game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer("true");
	until x == 50000 
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
	wait(0.2);
	game:GetService("ReplicatedStorage").Events.ToggleBlocking:FireServer(false);
end);
MSection:NewButton("Break Velocity", "", function()
	breakvelocity();
end);
MSection:NewButton("Reset", "", function()
	player.Character:BreakJoints();
end);
GetList();
local slcplr = TargetSection:NewDropdown("Select Player", "", dropdown, function(currentOption)
	spawn(function()
		_G.tplayer = currentOption;
		getgenv().confirm = true;
	end);
end);
TargetSection:NewButton("Refresh Dropdown", "", function()
	spawn(function()
		GetList();
		slcplr:Refresh(dropdown);
	end);
end);
TargetSection:NewButton("Goto Player", "", function()
	spawn(function()
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		p1.CFrame = game.Players[_G.tplayer].Character.HumanoidRootPart.CFrame;
		breakvelocity();
	end);
end);
TargetSection:NewToggle("Toggle Spectate", "", function(state)
	spawn(function()
		if state then
			spawn(function()
				getgenv().watch = true;
				while watch do
					spawn(function()
						viewing = game.Players[_G.tplayer];
						workspace.CurrentCamera.CameraSubject = viewing.Character;
					end);
					wait(0.1);
				end
			end);
		else
			spawn(function()
				wait(0.1);
				getgenv().watch = false;
				viewing = game.Players.LocalPlayer;
				workspace.CurrentCamera.CameraSubject = viewing.Character;
			end);
		end
	end);
end);
TargetSection:NewToggle("Kill Player", "", function(state)
	if state then
		getgenv().killplr = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().breakv = true;
		spawn(function()
			while breakv do
				breakvelocity();
				game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
				wait(1);
			end
		end);
		spawn(function()
			while killplr do
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				task.wait();
				spawn(function()
					pcall(function()
						for i, v in pairs(game.Workspace:GetChildren()) do
							if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
								game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1);
							end
						end
					end);
				end);
				spawn(function()
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
					game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
				end);
				spawn(function()
					local LookVector = game.Workspace.Camera.CFrame.LookVector;
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
					game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
				end);
				spawn(function()
					if (killplr == false) then
						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
					end
				end);
			end
		end);
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().killplr = false;
			wait(0.1);
			getgenv().killplr = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("Loop Goto Player", "", function(state)
	if state then
		getgenv().loopgoto = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().breakv = true;
		spawn(function()
			while breakv do
				wait(1);
				breakvelocity();
			end
		end);
		while loopgoto do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3);
						end
					end
				end);
			end);
			spawn(function()
				if (loopgoto == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().loopgoto = false;
			wait(0.1);
			getgenv().loopgoto = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("Fling Player", "", function(state)
	if state then
		getgenv().fling = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().Flingvel = true;
		for _, child in pairs(player.Character:GetDescendants()) do
			if child:IsA("BasePart") then
				child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5);
			end
		end
		local bambam = Instance.new("BodyAngularVelocity");
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart;
		bambam.AngularVelocity = Vector3.new(0, 1000, 0);
		bambam.MaxTorque = Vector3.new(0, math.huge, 0);
		local Char = player.Character:GetChildren();
		for i, v in next, Char do
			if v:IsA("BasePart") then
				v.CanCollide = false;
				v.Massless = true;
				v.Velocity = Vector3.new(0, 0, 0);
			end
		end
		while fling do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0);
						end
					end
				end);
			end);
			spawn(function()
				local PrimaryPart = player.Character.PrimaryPart;
				if ((PrimaryPart.AssemblyLinearVelocity.Magnitude > 250) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 250)) then
					PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.CFrame = LastPosition;
				elseif ((PrimaryPart.AssemblyLinearVelocity.Magnitude < 50) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 50)) then
					LastPosition = PrimaryPart.CFrame;
				end
			end);
			spawn(function()
				if (fling == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().fling = false;
			wait(0.1);
			getgenv().fling = true;
		end);
		local playerChar = player.Character;
		if (not playerChar or not getRoot(playerChar)) then
			return;
		end
		for i, v in pairs(getRoot(playerChar):GetChildren()) do
			if (v.ClassName == "BodyAngularVelocity") then
				v:Destroy();
			end
		end
		for _, child in pairs(playerChar:GetDescendants()) do
			if ((child.ClassName == "Part") or (child.ClassName == "MeshPart")) then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5);
			end
		end
		breakvelocity();
	end
end);
TargetSection:NewToggle("Laser", "", function(state)
	spawn(function()
		if state then
			getgenv().LaserL = true;
			wait();
			coroutine.resume(coroutine.create(function()
				local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
				local part = event:InvokeServer(true);
				getgenv().LaserL = true;
				while LaserL and part and _G.tplayer do
					wait();
					local target = game.Players:FindFirstChild(_G.tplayer);
					if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
						part.Position = target.Character.HumanoidRootPart.Position;
					end
				end
				event:InvokeServer(false);
			end));
		else
			spawn(function()
				getgenv().LaserL = false;
			end);
		end
	end);
end);
TargetSection:NewToggle("Give Orbs", "", function(state)
	spawn(function()
		if state then
			getgenv().ORBGIVE = true;
			while ORBGIVE do
				local character = game.Players:FindFirstChild(_G.tplayer).Character;
				for i, v in pairs(game:GetService("Workspace").ExperienceOrbs:GetChildren()) do
					local hrp = character.HumanoidRootPart;
					v.CFrame = hrp.CFrame;
				end
				wait();
			end
		else
			spawn(function()
				getgenv().ORBGIVE = false;
			end);
		end
	end);
end);
TargetSection:NewButton("Remove Gyro", "", function()
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisGyro:Destroy();
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisPosition:Destroy();
	game:GetService("Workspace")[_G.tplayer].Humanoid.PlatformStand = false;
	game:GetService("Workspace")[_G.tplayer].Humanoid.WalkSpeed = 150;
	game:GetService("Workspace")[_G.tplayer].Humanoid.JumpPower = 150;
end);
TargetSection:NewToggle("Disable Telekinesis", "", function(state)
	spawn(function()
		if state then
			Players = game:GetService("Players");
			for i, player in pairs(Players:GetPlayers()) do
				getgenv().LToggle = true;
				spawn(function()
					while LToggle do
						wait();
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
					end
				end);
			end
		else
			spawn(function()
				getgenv().LToggle = false;
			end);
		end
	end);
end);
KSection:NewKeybind("MetalSkin", "", Enum.KeyCode['R'], function()
	if (_G.metalskin == false) then
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
		_G.metalskin = true;
	else
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", false);
		_G.metalskin = false;
	end
end);
KSection:NewKeybind("Carry Player", "", Enum.KeyCode['H'], function()
	if (_G.CToggle == false) then
		spawn(function()
			getNearPlayer(99);
			wait();
			_G.CToggle = true;
			getgenv().CarryP = true;
			while CarryP do
				wait();
				spawn(function()
					for i, v in pairs(plrlist) do
						if (v == player) then
						else
							Xt = player.Character.HumanoidRootPart.Position['X'];
							Yt = player.Character.HumanoidRootPart.Position['Y'];
							Zt = player.Character.HumanoidRootPart.Position['Z'];
							game:GetService("Workspace")[v.Name].HumanoidRootPart.telekinesisPosition.Position = Vector3.new(Xt, Yt + 8, Zt + 5);
						end
					end
				end);
			end
		end);
	else
		spawn(function()
			_G.CToggle = false;
			plrlist = {};
			getgenv().CarryP = false;
		end);
	end
end);
KSection:NewKeybind("Telekinesis Lock", "", Enum.KeyCode['T'], function()
	spawn(function()
		local LookVector = game.Workspace.Camera.CFrame.LookVector;
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
	end);
end);
KSection:NewKeybind("Telekinesis kill", "", Enum.KeyCode['G'], function()
	spawn(function()
		getNearPlayer(99);
		for i, v in pairs(plrlist) do
			if (v == player) then
			else
				spawn(function()
					v.Head.Neck:Destroy();
					plrlist = {};
					wait(0.2);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[v.Name].Character);
					end);
				end);
			end
		end
	end);
end);
KSection:NewKeybind("Release Telekinesis", "", Enum.KeyCode['C'], function()
	plrlist = {};
	Players = game:GetService("Players");
	for i, player in pairs(Players:GetPlayers()) do
		spawn(function()
			game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
		end);
	end
end);
KSection:NewKeybind("Toggle UI", "", Enum.KeyCode.RightShift, function()
	Library:ToggleUI();
end); 
VSection:NewLabel("Others More")
-- BUTTON FROM OPEN AIMBOT SCRIPT
-- Variables
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local LocalPlayer = Players.LocalPlayer
local camlockEnabled = false
local sensitivity = 0.8
local targetPlayer = nil
local markerGui = nil

-- Función para reproducir sonido
local function playSound(id, pitch)
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. id
    sound.Volume = 1
    sound.Pitch = pitch
    sound.Parent = SoundService
    sound:Play()
    game.Debris:AddItem(sound, 2)
end

-- Crear una interfaz personalizada
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 100)
Frame.Position = UDim2.new(0.5, -100, 0.5, -50)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 2
Frame.Visible = false
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local AimbotButton = Instance.new("TextButton")
AimbotButton.Size = UDim2.new(0, 180, 0, 50)
AimbotButton.Position = UDim2.new(0, 10, 0, 25)
AimbotButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
AimbotButton.Text = "Activar Aimbot"
AimbotButton.Parent = Frame

local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.Text = "X"
CloseButton.Parent = Frame

-- Crear un marcador visual
local function createMarker(target)
    if markerGui then
        markerGui:Destroy()
    end
    
    markerGui = Instance.new("BillboardGui")
    markerGui.Size = UDim2.new(4, 0, 5, 0)
    markerGui.Adornee = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    markerGui.Parent = target.Character
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.Parent = markerGui
end

-- Función para encontrar al jugador más cercano en la mira
local function GetClosestPlayer()
    local camera = workspace.CurrentCamera
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local screenPos, onScreen = camera:WorldToViewportPoint(rootPart.Position)
            
            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)).Magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end
    return closestPlayer
end

-- Aimbot activación
local function camlock()
    if camlockEnabled and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local camera = workspace.CurrentCamera
        local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
        local targetCFrame = CFrame.new(camera.CFrame.Position, humanoidRootPart.Position)
        camera.CFrame = camera.CFrame:Lerp(targetCFrame, sensitivity)
    end
end

RunService.RenderStepped:Connect(camlock)

-- Evento del botón en la interfaz
AimbotButton.MouseButton1Click:Connect(function()
    camlockEnabled = not camlockEnabled
    playSound("4790690765", 1)
    AimbotButton.Text = camlockEnabled and "Desactivar Aimbot" or "Activar Aimbot"
    AimbotButton.BackgroundColor3 = camlockEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
    if camlockEnabled then
        targetPlayer = GetClosestPlayer()
        if targetPlayer then
            createMarker(targetPlayer)
        end
    else
        targetPlayer = nil
        if markerGui then
            markerGui:Destroy()
            markerGui = nil
        end
    end
end)

-- Evento del botón de cierre
CloseButton.MouseButton1Click:Connect(function()
    camlockEnabled = false
    Frame.Visible = false
    playSound("4790690765", 0.8)
    AimbotButton.Text = "On Aimbot/ X"
    AimbotButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    targetPlayer = nil
    if markerGui then
        markerGui:Destroy()
        markerGui = nil
    end
end)

-- Activar Aimbot con la tecla X solo una vez al jugador en la mira
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == Enum.KeyCode.X then
            camlockEnabled = true
            playSound("4790690765", 1)
            targetPlayer = GetClosestPlayer()
            if targetPlayer then
                createMarker(targetPlayer)
            end
            AimbotButton.Text = "OFF Aimbot/ C"
            AimbotButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        elseif input.KeyCode == Enum.KeyCode.C or input.KeyCode == Enum.KeyCode.C then
            camlockEnabled = false
            playSound("4790690765", 0.8)
            targetPlayer = nil
            if markerGui then
                markerGui:Destroy()
                markerGui = nil
            end
            AimbotButton.Text = "Activar Aimbot"
            AimbotButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        end
    end
end)
VSection:NewButton("Open Aimbot X/C", "Muestra la interfaz de Aimbot", function()
    Frame.Visible = not Frame.Visible
end)
-- Servicios de Roblox
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

-- Botón para reconectarse al servidor
VSection:NewButton("Rejoin", "Reconnect to the same server", function()
    local PlaceId = game.PlaceId
    local JobId = game.JobId
    
    if #Players:GetPlayers() <= 1 then
        LocalPlayer:Kick("\nRejoining.")
        wait()
        TeleportService:Teleport(PlaceId, LocalPlayer)
    else
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, LocalPlayer)
    end
end)
VSection:NewLabel("Macro and other - UI")
VSection:NewButton("Macro - Clicks (Key - Z)", "PC = Z  in mobile = ", function()

    -- Variables
    local player = game.Players.LocalPlayer
    local uis = game:GetService("UserInputService")
    local clickAmount = 3
    local speedValue = 0.05  -- Valor por defecto (Rápido)
    local speedLabelText = "Velocidad: Rápido"  -- Texto de velocidad por defecto
    local speedIndex = 1  -- 1 = Lento, 2 = Media, 3 = Rápido

    -- Crear interfaz flotante
    local gui = Instance.new("ScreenGui", game.CoreGui)
    gui.Name = "MacroClickUI"
    gui.ResetOnSpawn = false

    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0, 260, 0, 400)
    frame.Position = UDim2.new(0.5, -130, 0.5, -200)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.Active = true
    frame.Draggable = true
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

    -- Título
    local label = Instance.new("TextLabel", frame)
    label.Text = "Click Macro"
    label.Size = UDim2.new(1, 0, 0, 30)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 20

    -- Etiqueta de clics asignados
    local selectedLabel = Instance.new("TextLabel", frame)
    selectedLabel.Text = "Clics asignados: 3"
    selectedLabel.Size = UDim2.new(1, 0, 0, 20)
    selectedLabel.Position = UDim2.new(0, 0, 0, 30)
    selectedLabel.BackgroundTransparency = 1
    selectedLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    selectedLabel.Font = Enum.Font.Gotham
    selectedLabel.TextSize = 14

    -- Etiqueta de velocidad
    local speedLabel = Instance.new("TextLabel", frame)
    speedLabel.Text = speedLabelText
    speedLabel.Size = UDim2.new(1, 0, 0, 20)
    speedLabel.Position = UDim2.new(0, 0, 0, 55)
    speedLabel.BackgroundTransparency = 1
    speedLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    speedLabel.Font = Enum.Font.Gotham
    speedLabel.TextSize = 14

    -- Crear botón de cambiar velocidad (circular)
    local speedButton = Instance.new("TextButton", frame)
    speedButton.Size = UDim2.new(0, 200, 0, 30)
    speedButton.Position = UDim2.new(0, 30, 0, 80)
    speedButton.Text = "Cambiar Velocidad"
    speedButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
    speedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    speedButton.Font = Enum.Font.Gotham
    speedButton.TextSize = 16
    Instance.new("UICorner", speedButton).CornerRadius = UDim.new(0, 8)

    -- Función para cambiar velocidad
    local function changeSpeed()
        -- Ciclo entre las velocidades
        if speedIndex == 1 then
            speedValue = 0.2
            speedLabel.Text = "Velocidad: Lento"
            speedLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            speedIndex = 2
        elseif speedIndex == 2 then
            speedValue = 0.1
            speedLabel.Text = "Velocidad: Media"
            speedLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            speedIndex = 3
        else
            speedValue = 0.05
            speedLabel.Text = "Velocidad: Rápido"
            speedLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            speedIndex = 1
        end
    end

    -- Conectar el botón de cambiar velocidad
    speedButton.MouseButton1Click:Connect(changeSpeed)

    -- Función para actualizar el color del botón de clics
    local function updateButtonColor(btn, isSelected)
        if isSelected then
            btn.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Verde (seleccionado)
        else
            btn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)  -- Rojo (no seleccionado)
        end
    end

    -- Variables para controlar el estado de los botones de cantidad de clics
    local selectedButton = nil

    -- Crear botones de cantidad de clics
    local function makeButton(txt, y, amount)
        local btn = Instance.new("TextButton", frame)
        btn.Size = UDim2.new(0, 200, 0, 30)
        btn.Position = UDim2.new(0, 30, 0, y)
        btn.Text = "Clics: " .. txt
        btn.BackgroundColor3 = Color3.fromRGB(150, 0, 0)  -- Rojo por defecto
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 16
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

        -- Función para seleccionar/deseleccionar el botón
        btn.MouseButton1Click:Connect(function()
            -- Si el botón ya está seleccionado, deseleccionarlo
            if selectedButton == btn then
                clickAmount = 3
                selectedLabel.Text = "Clics asignados: 3"
                updateButtonColor(btn, false)
                selectedButton = nil
            else
                -- Seleccionar el nuevo botón y deseleccionar el anterior
                if selectedButton then
                    updateButtonColor(selectedButton, false)
                end
                clickAmount = amount
                selectedLabel.Text = "Clics asignados: " .. amount
                updateButtonColor(btn, true)
                selectedButton = btn
            end
        end)
    end

    makeButton("3", 120, 3)
    makeButton("5", 160, 5)
    makeButton("7", 200, 7)
    makeButton("10", 240, 10)
    makeButton("12", 280, 12)
    makeButton("15", 320, 15)

    -- Función para ejecutar clicks
    local function doClicks()
        for i = 1, clickAmount do
            mouse1click()
            wait(speedValue)
        end
    end

    -- Tecla Z
    uis.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.Z then
            doClicks()
        end
    end)

    -- Botón para móviles
    local mobileButton = Instance.new("TextButton", gui)
    mobileButton.Size = UDim2.new(0, 160, 0, 50)
    mobileButton.Position = UDim2.new(0.5, -80, 1, -60)
    mobileButton.Text = "Contra Z"
    mobileButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
    mobileButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    mobileButton.Font = Enum.Font.GothamBold
    mobileButton.TextSize = 16
    Instance.new("UICorner", mobileButton).CornerRadius = UDim.new(0, 10)

    mobileButton.MouseButton1Click:Connect(doClicks)
end)
-- Variables
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local FlyGUI = Instance.new("ScreenGui")
local FlyFrame = Instance.new("Frame")
local CloseButton = Instance.new("TextButton")
local StartFlyButton = Instance.new("TextButton")
local StopFlyButton = Instance.new("TextButton")
local SpeedBox = Instance.new("TextBox")
local VerifyButton = Instance.new("TextButton")
local TitleLabel = Instance.new("TextLabel")
local FlySpeed = 50
local FLYING = false
local CONTROL = {F = 0, B = 0, L = 0, R = 0, U = 0, D = 0}

-- Configurar GUI
FlyGUI.Parent = game.CoreGui
FlyFrame.Size = UDim2.new(0, 250, 0, 250)
FlyFrame.Position = UDim2.new(0.5, -125, 0.5, -125)
FlyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FlyFrame.BorderSizePixel = 2
FlyFrame.BorderColor3 = Color3.fromRGB(255, 215, 0)
FlyFrame.Visible = false
FlyFrame.Parent = FlyGUI
FlyFrame.Active = true
FlyFrame.Draggable = true

-- Título
TitleLabel.Size = UDim2.new(1, 0, 0, 30)
TitleLabel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TitleLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
TitleLabel.Text = "Fly Settings"
TitleLabel.Font = Enum.Font.SourceSansBold
TitleLabel.TextSize = 20
TitleLabel.Parent = FlyFrame

-- Botón de cierre (X roja)
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -30, 0, 5)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Text = "X"
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 16
CloseButton.Parent = FlyFrame
CloseButton.MouseButton1Click:Connect(function()
    FlyFrame.Visible = false
end)

-- Caja de texto para velocidad
SpeedBox.Size = UDim2.new(0, 220, 0, 30)
SpeedBox.Position = UDim2.new(0, 15, 0, 50)
SpeedBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SpeedBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedBox.PlaceholderText = "Enter Fly Speed"
SpeedBox.Font = Enum.Font.SourceSans
SpeedBox.TextSize = 18
SpeedBox.Parent = FlyFrame
SpeedBox.FocusLost:Connect(function()
    local speed = tonumber(SpeedBox.Text)
    if speed then
        FlySpeed = speed
    end
end)

-- Controles de vuelo
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.W then CONTROL.F = 1 end
    if input.KeyCode == Enum.KeyCode.S then CONTROL.B = 1 end
    if input.KeyCode == Enum.KeyCode.A then CONTROL.L = 1 end
    if input.KeyCode == Enum.KeyCode.D then CONTROL.R = 1 end
    if input.KeyCode == Enum.KeyCode.Space then CONTROL.U = 1 end
    if input.KeyCode == Enum.KeyCode.LeftShift then CONTROL.D = 1 end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.W then CONTROL.F = 0 end
    if input.KeyCode == Enum.KeyCode.S then CONTROL.B = 0 end
    if input.KeyCode == Enum.KeyCode.A then CONTROL.L = 0 end
    if input.KeyCode == Enum.KeyCode.D then CONTROL.R = 0 end
    if input.KeyCode == Enum.KeyCode.Space then CONTROL.U = 0 end
    if input.KeyCode == Enum.KeyCode.LeftShift then CONTROL.D = 0 end
end)

-- Función para iniciar vuelo con control manual
local function StartFly()
    if FLYING then return end
    FLYING = true
    local Character = LocalPlayer.Character
    if not Character then return end
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
    if not HumanoidRootPart then return end
    local BG = Instance.new("BodyGyro", HumanoidRootPart)
    local BV = Instance.new("BodyVelocity", HumanoidRootPart)
    BG.P = 9e4
    BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
    Character:FindFirstChildOfClass("Humanoid").PlatformStand = true
    task.spawn(function()
        while FLYING do
            task.wait()
            BV.Velocity = workspace.CurrentCamera.CFrame:VectorToWorldSpace(Vector3.new(CONTROL.R - CONTROL.L, CONTROL.U - CONTROL.D, CONTROL.B - CONTROL.F)) * FlySpeed
            BG.CFrame = workspace.CurrentCamera.CFrame
        end
        BG:Destroy()
        BV:Destroy()
    end)
end

-- Función para detener vuelo
local function StopFly()
    FLYING = false
    local Character = LocalPlayer.Character
    if Character then
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        if Humanoid then
            Humanoid.PlatformStand = false
        end
    end
end

-- Botón para iniciar vuelo
StartFlyButton.Size = UDim2.new(0, 220, 0, 30)
StartFlyButton.Position = UDim2.new(0, 15, 0, 130)
StartFlyButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
StartFlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartFlyButton.Text = "Start Fly"
StartFlyButton.Font = Enum.Font.SourceSansBold
StartFlyButton.TextSize = 18
StartFlyButton.Parent = FlyFrame
StartFlyButton.MouseButton1Click:Connect(StartFly)

-- Botón para detener vuelo
StopFlyButton.Size = UDim2.new(0, 220, 0, 30)
StopFlyButton.Position = UDim2.new(0, 15, 0, 170)
StopFlyButton.BackgroundColor3 = Color3.fromRGB(180, 0, 0)
StopFlyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopFlyButton.Text = "Stop Fly"
StopFlyButton.Font = Enum.Font.SourceSansBold
StopFlyButton.TextSize = 18
StopFlyButton.Parent = FlyFrame
StopFlyButton.MouseButton1Click:Connect(StopFly)

-- Botón en Kavo para abrir la GUI
VSection:NewButton("Open Fly Settings", "Opens the Fly configuration menu", function()
    FlyFrame.Visible = true
end)
VSection:NewButton("Pro KillAura UI", "Configura la Kill Aura", function()
    -- Verificar si ya existe un GUI para no duplicarlo
    if game:GetService("CoreGui"):FindFirstChild("KillAuraGui") then
        return
    end

    -- Crear la interfaz de configuración al hacer clic en el botón
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "KillAuraGui"  -- Asignamos un nombre único
    screenGui.ResetOnSpawn = false  -- Evita que se borre al morir
    screenGui.Parent = game:GetService("CoreGui")  -- CoreGui no se borra al morir

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 350, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -175, 0.5, -200)
    mainFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    mainFrame.Active = true
    mainFrame.Draggable = true  -- Permitir mover el menú

    -- Crear la caja de texto para cantidad de golpes
    local hitsLabel = Instance.new("TextLabel")
    hitsLabel.Size = UDim2.new(0, 320, 0, 30)
    hitsLabel.Position = UDim2.new(0, 10, 0, 50)
    hitsLabel.Text = "Cantidad de Golpes"
    hitsLabel.TextSize = 18
    hitsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    hitsLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    hitsLabel.Parent = mainFrame

    local hitsTextBox = Instance.new("TextBox")
    hitsTextBox.Size = UDim2.new(0, 320, 0, 30)
    hitsTextBox.Position = UDim2.new(0, 10, 0, 80)
    hitsTextBox.ClearTextOnFocus = true
    hitsTextBox.Text = tostring(getgenv().hits)  -- Valor predeterminado
    hitsTextBox.TextSize = 18
    hitsTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    hitsTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    hitsTextBox.Parent = mainFrame

    -- Crear la caja de texto para el cooldown
    local cooldownLabel = Instance.new("TextLabel")
    cooldownLabel.Size = UDim2.new(0, 320, 0, 30)
    cooldownLabel.Position = UDim2.new(0, 10, 0, 120)
    cooldownLabel.Text = "Cooldown (segundos)"
    cooldownLabel.TextSize = 18
    cooldownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    cooldownLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    cooldownLabel.Parent = mainFrame

    local cooldownTextBox = Instance.new("TextBox")
    cooldownTextBox.Size = UDim2.new(0, 320, 0, 30)
    cooldownTextBox.Position = UDim2.new(0, 10, 0, 150)
    cooldownTextBox.ClearTextOnFocus = true
    cooldownTextBox.Text = tostring(getgenv().cooldown)  -- Valor predeterminado
    cooldownTextBox.TextSize = 18
    cooldownTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    cooldownTextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    cooldownTextBox.Parent = mainFrame

    -- Crear el botón de Activar/Desactivar Kill Aura
    local killAuraToggleButton = Instance.new("TextButton")
    killAuraToggleButton.Size = UDim2.new(0, 320, 0, 40)
    killAuraToggleButton.Position = UDim2.new(0, 10, 0, 200)
    killAuraToggleButton.Text = "Activar Kill Aura"
    killAuraToggleButton.TextSize = 18
    killAuraToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    killAuraToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Rojo por defecto
    killAuraToggleButton.Parent = mainFrame

    -- Crear el botón de cierre (X)
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 10)
    closeButton.Text = "X"
    closeButton.TextSize = 20
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    closeButton.Parent = mainFrame

    -- Función para activar/desactivar Kill Aura
    local function toggleKillAura()
        local hits = tonumber(hitsTextBox.Text) or 1
        getgenv().hits = hits

        local cooldown = tonumber(cooldownTextBox.Text) or 1
        if cooldown < 1 then cooldown = 1 end
        getgenv().cooldown = cooldown

        if getgenv().attackPlayer then
            getgenv().attackPlayer = false
            killAuraToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            killAuraToggleButton.Text = "Activar Kill Aura"
            return
        end

        killAuraToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        killAuraToggleButton.Text = "Desactivar Kill Aura"
        getgenv().attackPlayer = true

        spawn(function()
            while getgenv().attackPlayer do
                local char = game.Players.LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    for i = 1, getgenv().hits do
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                    end
                end
                task.wait(getgenv().cooldown)
            end
        end)
    end

    killAuraToggleButton.MouseButton1Click:Connect(toggleKillAura)

    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
end)
ERSection:NewLabel("ESP Mode")
-- Servicios necesarios
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local SoundService = game:GetService("SoundService")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer

-- Variables
local ToggleESP = false
local ESP_Connections = {}
local DetectionSoundID = 125090389445721
local DetectionRange = 500
local DetectedPlayers = {}

-- Función para reproducir el sonido de detección
local function PlayDetectionSound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. DetectionSoundID
    sound.Looped = false
    sound.Volume = 1
    sound.Parent = SoundService
    sound:Play()
    task.wait(3)
    sound:Destroy()
end

-- Función para enviar notificación al jugador local
local function SendNotification(playerName)
    StarterGui:SetCore("SendNotification", {
        Title = "Scouter Alert",
        Text = "Identificado: " .. playerName,
        Duration = 3
    })
end

-- Función para actualizar ESP de un jugador
local function UpdateESP(v)
    if not ToggleESP then return end -- Detener actualizaciones si el rastreo está desactivado
    
    if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
        local distance = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        
        if distance >= DetectionRange and not DetectedPlayers[v] then
            DetectedPlayers[v] = true
            PlayDetectionSound()
            SendNotification(v.Name)
        elseif distance < DetectionRange then
            DetectedPlayers[v] = nil
        end

        local esp = v.Character:FindFirstChild("ESP_Box")
        if not esp then
            esp = Instance.new("Highlight", v.Character)
            esp.Name = "ESP_Box"
            esp.FillTransparency = 0.5
            esp.OutlineTransparency = 0
        end
        esp.FillColor = Color3.fromRGB(255, 255, 0) -- Amarillo
        esp.OutlineColor = Color3.fromRGB(255, 255, 255)

        -- Crear o actualizar etiquetas de información estilo scouter
        local Billboard = v.Character:FindFirstChild("ESP_Info")
        if not Billboard then
            Billboard = Instance.new("BillboardGui", v.Character)
            Billboard.Name = "ESP_Info"
            Billboard.Size = UDim2.new(0, 200, 0, 100)
            Billboard.StudsOffset = Vector3.new(0, 3, 0)
            Billboard.AlwaysOnTop = true
            
            local TextLabel = Instance.new("TextLabel", Billboard)
            TextLabel.Name = "Info"
            TextLabel.Size = UDim2.new(1, 0, 1, 0)
            TextLabel.BackgroundTransparency = 1
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Amarillo
            TextLabel.TextSize = 14
            TextLabel.Font = Enum.Font.Code
            TextLabel.TextStrokeTransparency = 0
            TextLabel.TextWrapped = true
            TextLabel.TextYAlignment = Enum.TextYAlignment.Top
        end

        local statsInfo = "[SCOUTER DATA]\n" .. v.Name .. "\n" .. string.rep("-", 20) .. "\n"
        local leaderstats = v:FindFirstChild("leaderstats")
        if leaderstats then
            local order = {"Level", "Money"}
            for _, statName in ipairs(order) do
                local stat = leaderstats:FindFirstChild(statName)
                if stat then
                    statsInfo = statsInfo .. statName .. ": " .. tostring(stat.Value) .. "\n"
                end
            end
        end

        local toolName = "No Tool"
        local character = v.Character
        if character then
            local tool = character:FindFirstChildOfClass("Tool")
            if tool then
                toolName = "Tool: " .. tool.Name
            end
        end

        statsInfo = statsInfo .. "\n" .. toolName .. "\nDistance: " .. math.floor(distance) .. "m"
        Billboard.Info.Text = statsInfo
    end
end

-- Función para activar/desactivar el ESP
local function ESP_Toggle(state)
    ToggleESP = state
    
    if ToggleESP then
        for _, v in pairs(Players:GetPlayers()) do
            UpdateESP(v)
        end

        ESP_Connections["Render"] = RunService.RenderStepped:Connect(function()
            for _, v in pairs(Players:GetPlayers()) do
                UpdateESP(v)
            end
        end)

        ESP_Connections["PlayerAdded"] = Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function()
                task.wait(1)
                UpdateESP(player)
            end)
        end)
    else
        for _, v in pairs(Players:GetPlayers()) do
            if v.Character and v.Character:FindFirstChild("ESP_Box") then
                v.Character:FindFirstChild("ESP_Box"):Destroy()
            end
            if v.Character and v.Character:FindFirstChild("ESP_Info") then
                v.Character:FindFirstChild("ESP_Info"):Destroy()
            end
        end
        for _, conn in pairs(ESP_Connections) do
            conn:Disconnect()
        end
        ESP_Connections = {}
    end
end

-- Botones en la UI de Kavo
ERSection:NewButton("Start ESP MODE", "Inicia el rastreo de jugadores", function()
    ESP_Toggle(true)
end)

ERSection:NewButton("Stop ESP MODE", "Detiene el rastreo de jugadores", function()
    ESP_Toggle(false)
end)
ERSection:NewLabel("Telekinesis Options")
-- Servicios y variables
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local plrlist = {}
local rotationAngle = 0
local CarryEnabled = false

-- Funciones
local function getNearPlayer(maxDistance)
	plrlist = {}
	for _, v in pairs(Players:GetPlayers()) do
		if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude
			if dist <= maxDistance then
				table.insert(plrlist, v.Character)
			end
		end
	end
end

local function movePlayerWithTelekinesis(position, playerName)
	local player = Players:FindFirstChild(playerName)
	if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		local pos = player.Character.HumanoidRootPart:FindFirstChild("telekinesisPosition")
		if pos then pos.Position = position end
	end
end

-- Botón: Activar telequinesis
ERSection:NewButton("Telekinesis INF", "Usa la dirección de tu cámara", function()
	local lookVec = Camera.CFrame.LookVector
	ReplicatedStorage.Events.ToggleTelekinesis:InvokeServer(lookVec, true)
	ReplicatedStorage.Events.ToggleTelekinesis:InvokeServer(lookVec, false)
end)

-- Botón: Liberar todos
ERSection:NewButton("Liberar de la Telekinesis", "Suelta a todos los jugadores afectados", function()
	for _, v in pairs(Players:GetPlayers()) do
		if v.Character then
			ReplicatedStorage.Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, v.Character)
		end
	end
end)

-- Botón: Forzar kill cercano
ERSection:NewButton("Telekinesis Kill", "Rompe cuellos de jugadores cercanos", function()
	getNearPlayer(99)
	for _, v in pairs(plrlist) do
		if v and v:FindFirstChild("Head") and v.Head:FindFirstChild("Neck") then
			v.Head.Neck:Destroy()
			spawn(function()
				ReplicatedStorage.Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, v)
			end)
		end
	end
end)
ERSection:NewLabel("Other Menu")
ERSection:NewButton("Dispara tus FPS", "By TioHelmoso ", function()
    local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    t:Clear() -- Remove all terrain
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "Level01"
    
    -- Remove buildings in City
    if w:FindFirstChild("City") then
        if w.City:FindFirstChild("Buildings") then
            w.City.Buildings:Destroy()
        end
    end
    
    for i, v in pairs(g:GetDescendants()) do
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
end)

function antilag()
    local Lighting = game:GetService("Lighting")
    local Terrain = game:GetService("Workspace"):FindFirstChildOfClass("Terrain")

    -- Ajustes en el terreno
    if Terrain then
        Terrain.WaterWaveSize = 0
        Terrain.WaterWaveSpeed = 0
        Terrain.WaterReflectance = 0
        Terrain.WaterTransparency = 0
    end

    -- Ajustes en la iluminación
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 9e9
    Lighting.Brightness = 0

    -- Reducir calidad de renderizado
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01

    -- Optimización de las partes del juego
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = Enum.Material.Plastic
            v.Reflectance = 0
        elseif v:IsA("Decal") then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 0
            v.BlastRadius = 0
        end
    end

    -- Desactivar efectos visuales
    for _, v in pairs(Lighting:GetChildren()) do
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or 
           v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
            v.Enabled = false
        end
    end

    -- Eliminar efectos visuales en tiempo real
    workspace.DescendantAdded:Connect(function(v)
        if v:IsA("ForceField") or v:IsA("Sparkles") or v:IsA("Smoke") or v:IsA("Fire") then
            v:Destroy()
        end
    end)
end
ERSection:NewLabel("Day/Night")
-- Obtener el servicio de iluminación
local Lighting = game:GetService("Lighting")

-- Botón para cambiar a día
ERSection:NewButton("Set Day", "Change time to 2:00 PM", function()
    Lighting.ClockTime = 14
    Kavo:Notification({Title = "Time Control", Text = "Time set to Day", Duration = 3})
end)

-- Botón para cambiar a noche
ERSection:NewButton("Set Night", "Change time to Midnight", function()
    Lighting.ClockTime = 0
    Kavo:Notification({Title = "Time Control", Text = "Time set to Night", Duration = 3})
end)

ERSection:NewLabel("Noclip (Atravesar paredes)")
-- Variables
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local Noclipping = nil
local Clip = true

-- Función para activar Noclip
local function EnableNoclip()
    Clip = false
    local function NoclipLoop()
        if not Clip and LocalPlayer.Character then
            for _, child in pairs(LocalPlayer.Character:GetDescendants()) do
                if child:IsA("BasePart") then
                    child.CanCollide = false
                end
            end
        end
    end
    Noclipping = RunService.Stepped:Connect(NoclipLoop)
    Kavo:Notification({Title = "Noclip", Text = "Noclip Enabled", Duration = 3})
end

-- Función para desactivar Noclip
local function DisableNoclip()
    Clip = true
    if Noclipping then
        Noclipping:Disconnect()
        Noclipping = nil
    end
    if LocalPlayer.Character then
        for _, child in pairs(LocalPlayer.Character:GetDescendants()) do
            if child:IsA("BasePart") then
                child.CanCollide = true
            end
        end
    end
    Kavo:Notification({Title = "Noclip", Text = "Noclip Disabled", Duration = 3})
end

-- Botón para activar Noclip
ERSection:NewButton("Start Noclip", "Enable noclip mode", function()
    EnableNoclip()
end)

-- Botón para desactivar Noclip
ERSection:NewButton("Stop Noclip", "Disable noclip mode", function()
    DisableNoclip()
end)

GetList();
local slcplr = TargetSection:NewDropdown("Select Player", "", dropdown, function(currentOption)
	spawn(function()
		_G.tplayer = currentOption;
	end);
end);
TargetSection:NewButton("Refresh Dropdown", "", function()
	spawn(function()
		GetList();
		slcplr:Refresh(dropdown);
	end);
end);
TargetSection:NewToggle("Aimbot (Enfocar jugador)", "Automatically aims at the selected player", function(state)
    spawn(function()
        if state then
            getgenv().aimbot = true;
            while aimbot do
                task.wait();
                local target = game.Players:FindFirstChild(_G.tplayer);
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, target.Character.HumanoidRootPart.Position);
                end
            end
        else
            getgenv().aimbot = false;
        end
    end);
end);
TargetSection:NewToggle("Spectate Player", "", function(state)
	spawn(function()
		if state then
			spawn(function()
				getgenv().watch = true;
				while watch do
					spawn(function()
						viewing = game.Players[_G.tplayer];
						workspace.CurrentCamera.CameraSubject = viewing.Character;
					end);
					wait();
				end
			end);
		else
			spawn(function()
				getgenv().watch = false;
				viewing = game.Players.LocalPlayer;
				workspace.CurrentCamera.CameraSubject = viewing.Character;
				wait();
				getgenv().watch = false;
				viewing = game.Players.LocalPlayer;
				workspace.CurrentCamera.CameraSubject = viewing.Character;
			end);
		end
	end);
end);
TargetSection:NewLabel("Funciones de Teleport")
TargetSection:NewButton("Teleport To Player", "", function()
	spawn(function()
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		p1.CFrame = game.Players[_G.tplayer].Character.HumanoidRootPart.CFrame;
		breakvelocity();
	end);
end);
TargetSection:NewToggle("Tp Loop (Teletransporte Inf)", "", function(state)
	if state then
		getgenv().loopgoto = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().breakv = true;
		spawn(function()
			while breakv do
				wait(1);
				breakvelocity();
			end
		end);
		while loopgoto do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4);
						end
					end
				end);
			end);
			spawn(function()
				if (loopgoto == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().breakv = false;
			wait(0.2);
			getgenv().loopgoto = false;
			wait(0.1);
			getgenv().loopgoto = true;
			breakvelocity();
		end);
	end
end);
TargetSection:NewToggle("Fling Player (Mandar volando al jugador)", "", function(state)
	if state then
		getgenv().fling = true;
		local varX = player.Character.HumanoidRootPart.Position['X'];
		local varY = player.Character.HumanoidRootPart.Position['Y'];
		local varZ = player.Character.HumanoidRootPart.Position['Z'];
		wait();
		local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
		local pos = p1.CFrame;
		getgenv().Flingvel = true;
		for _, child in pairs(player.Character:GetDescendants()) do
			if child:IsA("BasePart") then
				child.CustomPhysicalProperties = PhysicalProperties.new(math.huge, 0.3, 0.5);
			end
		end
		local bambam = Instance.new("BodyAngularVelocity");
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart;
		bambam.AngularVelocity = Vector3.new(0, 1000, 0);
		bambam.MaxTorque = Vector3.new(0, math.huge, 0);
		local Char = player.Character:GetChildren();
		for i, v in next, Char do
			if v:IsA("BasePart") then
				v.CanCollide = false;
				v.Massless = true;
				v.Velocity = Vector3.new(0, 0, 0);
			end
		end
		while fling do
			task.wait();
			spawn(function()
				pcall(function()
					for i, v in pairs(game.Workspace:GetChildren()) do
						if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
							game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 0);
						end
					end
				end);
			end);
			spawn(function()
				local PrimaryPart = player.Character.PrimaryPart;
				if ((PrimaryPart.AssemblyLinearVelocity.Magnitude > 250) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 250)) then
					PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0);
					PrimaryPart.CFrame = LastPosition;
				elseif ((PrimaryPart.AssemblyLinearVelocity.Magnitude < 50) or (PrimaryPart.AssemblyAngularVelocity.Magnitude > 50)) then
					LastPosition = PrimaryPart.CFrame;
				end
			end);
			spawn(function()
				if (fling == false) then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
				end
			end);
		end
	else
		spawn(function()
			getgenv().fling = false;
			wait(0.1);
			getgenv().fling = true;
		end);
		local playerChar = player.Character;
		if (not playerChar or not getRoot(playerChar)) then
			return;
		end
		for i, v in pairs(getRoot(playerChar):GetChildren()) do
			if (v.ClassName == "BodyAngularVelocity") then
				v:Destroy();
			end
		end
		for _, child in pairs(playerChar:GetDescendants()) do
			if ((child.ClassName == "Part") or (child.ClassName == "MeshPart")) then
				child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5);
			end
		end
		breakvelocity();
	end
end);
TargetSection:NewLabel("Funciones de Kill-Matar")
TargetSection:NewToggle("Kill Player", "", function(state)
    if state then
        getgenv().killplr = true;
        local varX = player.Character.HumanoidRootPart.Position['X'];
        local varY = player.Character.HumanoidRootPart.Position['Y'];
        local varZ = player.Character.HumanoidRootPart.Position['Z'];
        wait();
        local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
        local pos = p1.CFrame;
        getgenv().breakv = true;
        spawn(function()
            while breakv do
                breakvelocity();
                game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
                wait(1);
            end
        end);
        spawn(function()
            while killplr do
                wait(0.2);  -- Optimización: Reducir la frecuencia de las iteraciones
                spawn(function()
                    pcall(function()
                        for i, v in pairs(game.Workspace:GetChildren()) do
                            if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1);
                            end
                        end
                    end);
                end);
                spawn(function()
                    local punchCount = 30  -- Optimización: Reducir el número de golpes por iteración
                    for i = 1, punchCount do
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
                        wait(0.3);  -- Añadir un pequeño retraso entre cada golpe
                    end
                end);
                spawn(function()
                    local lastTelekinesis = tick();
                    if tick() - lastTelekinesis >= 1 then  -- Optimización: Invocar telequinesis cada 1 segundo
                        local LookVector = game.Workspace.Camera.CFrame.LookVector;
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
                        lastTelekinesis = tick();
                    end
                end);
                spawn(function()
                    if (killplr == false) then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
                    end
                end);
            end
        end);
    else
        spawn(function()
            getgenv().breakv = false;
            wait(0.3);
            getgenv().killplr = false;
            wait(0.3);
            getgenv().killplr = true;
            breakvelocity();
        end);
    end
end);
TargetSection:NewToggle("Kill Player (Heavy)", "", function(state)
    if state then
        getgenv().killplr = true
        local varX = player.Character.HumanoidRootPart.Position['X']
        local varY = player.Character.HumanoidRootPart.Position['Y']
        local varZ = player.Character.HumanoidRootPart.Position['Z']
        wait()
        local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
        local pos = p1.CFrame
        getgenv().breakv = true
        spawn(function()
            while breakv do
                breakvelocity()
                game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true)
                wait(1)
            end
        end)
        spawn(function()
            while killplr do
                wait(0.2)
                spawn(function()
                    pcall(function()
                        for i, v in pairs(game.Workspace:GetChildren()) do
                            if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
                            end
                        end
                    end)
                end)
                spawn(function()
                    local punchCount = 30
                    for i = 1, punchCount do
                        -- Cambiado: Aquí puedes reemplazar la línea por la función y parámetros deseados
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                        wait(0.5)
                    end
                end)
                spawn(function()
                    local lastTelekinesis = tick()
                    if tick() - lastTelekinesis >= 1 then
                        local LookVector = game.Workspace.Camera.CFrame.LookVector
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true)
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false)
                        lastTelekinesis = tick()
                    end
                end)
                spawn(function()
                    if (killplr == false) then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ)
                    end
                end)
            end
        end)
    else
        spawn(function()
            getgenv().breakv = false
            wait(0.3)
            getgenv().killplr = false
            wait(0.3)
            getgenv().killplr = true
            breakvelocity()
        end)
    end
end)
TargetSection:NewToggle("Kill Player (Mixto)", "", function(state)
    if state then
        getgenv().killplr = true;
        local varX = player.Character.HumanoidRootPart.Position['X'];
        local varY = player.Character.HumanoidRootPart.Position['Y'];
        local varZ = player.Character.HumanoidRootPart.Position['Z'];
        wait();
        local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart;
        local pos = p1.CFrame;
        getgenv().breakv = true;

        -- Hilo para breakvelocity y transformación
        spawn(function()
            while breakv do
                breakvelocity();
                game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
                wait(1);
            end
        end);

        -- Hilo para Kill Player
        spawn(function()
            while killplr do
                wait(0.2);  -- Reducir la frecuencia de las iteraciones
                spawn(function()
                    pcall(function()
                        for i, v in pairs(game.Workspace:GetChildren()) do
                            if ((v.Name == _G.tplayer) and v:FindFirstChild("Humanoid") and (v.Humanoid.Health > 0)) then
                                game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1);
                            end
                        end
                    end);
                end);

                -- Hilo para realizar 10 golpes
                spawn(function()
                    local punchCount = 30  -- Se cambió el número de golpes de 1 a 10
                    for i = 1, punchCount do
                        -- Primer ataque
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1);
                        -- Segundo ataque
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1);
                        wait(0.1);  -- Añadir un pequeño retraso entre cada golpe
                    end
                end);

                -- Hilo para telequinesis
                spawn(function()
                    local lastTelekinesis = tick();
                    if tick() - lastTelekinesis >= 1 then  -- Invocar telequinesis cada 1 segundo
                        local LookVector = game.Workspace.Camera.CFrame.LookVector;
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
                        game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
                        lastTelekinesis = tick();
                    end
                end);

                -- Hilo para volver a la posición original cuando se desactiva el toggle
                spawn(function()
                    if (killplr == false) then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(varX, varY, varZ);
                    end
                end);
            end
        end);
    else
        spawn(function()
            getgenv().breakv = false;
            wait(0.3);
            getgenv().killplr = false;
            wait(0.7);
            getgenv().killplr = true;
            breakvelocity();
        end);
    end
end);
TargetSection:NewLabel("Otras funciones")
TargetSection:NewToggle("Laser", "", function(state)
	spawn(function()
		if state then
			getgenv().LaserL = true;
			wait();
			coroutine.resume(coroutine.create(function()
				local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
				local part = event:InvokeServer(true);
				getgenv().LaserL = true;
				while LaserL and part and _G.tplayer do
					wait();
					local target = game.Players:FindFirstChild(_G.tplayer);
					if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
						part.Position = target.Character.HumanoidRootPart.Position;
					end
				end
				event:InvokeServer(false);
			end));
		else
			spawn(function()
				getgenv().LaserL = false;
			end);
		end
	end);
end);
TargetSection:NewToggle("Laser desde el cielo", "Laser Beams Assigned Player From Sky", function(state)
	spawn(function()
		if state then
			local orbX = player.Character.HumanoidRootPart.Position["X"];
			local orbY = player.Character.HumanoidRootPart.Position["Y"];
			local orbZ = player.Character.HumanoidRootPart.Position["Z"];
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(orbX, 5000, orbZ);
			getgenv().LaserL = true;
			wait(0.2);
			player.Character.HumanoidRootPart.Anchored = true;
			coroutine.resume(coroutine.create(function()
				local event = game:GetService("ReplicatedStorage").Events.ToggleLaserVision;
				local part = event:InvokeServer(true);
				getgenv().LaserL = true;
				while LaserL and part and _G.tplayer do
					wait();
					local target = game.Players:FindFirstChild(_G.tplayer);
					if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
						part.Position = target.Character.HumanoidRootPart.Position;
					end
				end
				event:InvokeServer(false);
			end));
		else
			player.Character.HumanoidRootPart.Anchored = false;
			spawn(function()
				getgenv().LaserL = false;
			end);
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(orbX, orbY, orbZ);
			breakvelocity();
		end
	end);
end);
TargetSection:NewButton("Remove Gyro", "", function()
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisGyro:Destroy();
	game:GetService("Workspace")[_G.tplayer].HumanoidRootPart.telekinesisPosition:Destroy();
	game:GetService("Workspace")[_G.tplayer].Humanoid.PlatformStand = false;
	game:GetService("Workspace")[_G.tplayer].Humanoid.WalkSpeed = 200;
	game:GetService("Workspace")[_G.tplayer].Humanoid.JumpPower = 150;
end);
TargetSection:NewToggle("Disable Telekinesis", "", function(state)
	spawn(function()
		if state then
			Players = game:GetService("Players");
			for i, player in pairs(Players:GetPlayers()) do
				getgenv().LToggle = true;
				spawn(function()
					while LToggle do
						wait();
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[player.Name].Character);
					end
				end);
			end
		else
			spawn(function()
				getgenv().LToggle = false;
			end);
		end
	end);
end);

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local BangActive = false

-- Función para teletransportar y ejecutar animación continuamente cada 0.3s
local function BangPlayer()
    BangActive = true
    while BangActive do
        if _G.tplayer then
            local TargetPlayer = Players:FindFirstChild(_G.tplayer)
            if TargetPlayer and TargetPlayer.Character and LocalPlayer.Character then
                local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
                local LocalHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                
                if TargetHRP and LocalHRP and Humanoid then
                    -- Teletransportar continuamente detrás del jugador objetivo cada 0.3s
                    LocalHRP.CFrame = TargetHRP.CFrame * CFrame.new(0, 0, 1.5) -- Mueve 1.5 studs detrás
                    
                    -- Seleccionar la animación según el tipo de rig
                    local Anim = Instance.new("Animation")
                    Anim.AnimationId = Humanoid.RigType == Enum.HumanoidRigType.R6 and "rbxassetid://148840371" or "rbxassetid://5918726674"
                    
                    -- Reproducir animación si no está ya en reproducción con una velocidad suave
                    if not Humanoid:FindFirstChild("PlayingBang") then
                        local AnimTrack = Humanoid:LoadAnimation(Anim)
                        AnimTrack.Name = "PlayingBang"
                        AnimTrack:Play()
                        AnimTrack:AdjustSpeed(1.5) -- Velocidad moderada
                    end
                end
            end
        end
        task.wait(0.3) -- Ajustar la frecuencia de teletransporte a 0.3s
    end
end

-- Función para detener la animación y teletransporte
local function UnbangPlayer()
    BangActive = false
    if LocalPlayer.Character then
        local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if Humanoid then
            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end
        end
    end
end
TargetSection:NewLabel("Kachal (Boton para fiolar)")
-- Botón para ejecutar Bang
TargetSection:NewButton("Fiolar", "Start the FIolar animation", BangPlayer)

-- Botón para detener Bang
TargetSection:NewButton("UnFiolar", "Stop the Fiolar animation", UnbangPlayer)

-- Botón para activar la GUI de AutoPunch
RapidSection:NewButton("Abrir RapidPunch UI basic", "Muestra la GUI de AutoPunch", function()
    local UserInputService = game:GetService("UserInputService")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    -- Verificar si el evento de golpe existe
    local punchEvent = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Punch")
    if not punchEvent then
        warn("[AutoPunch] PunchEvent no encontrado en ReplicatedStorage.Events")
    end

    -- Crear la GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AutoPunchGUI"
    screenGui.Parent = game.CoreGui
    screenGui.Enabled = true
    screenGui.ResetOnSpawn = false -- Mantener la interfaz después del respawn

    -- Marco principal
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 380, 0, 440)
    frame.Position = UDim2.new(0.35, 0, 0.3, 0)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
    frame.BorderSizePixel = 2
    frame.Draggable = true
    frame.Active = true
    frame.Parent = screenGui

    -- Botón flotante para abrir/cerrar la GUI
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 50)
    toggleButton.Position = UDim2.new(0.9, -60, 0.8, 0)
    toggleButton.Text = "📜"
    toggleButton.TextScaled = true
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.Parent = screenGui
    toggleButton.Draggable = true

    -- Botón de cerrar
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 35, 0, 35)
    closeButton.Position = UDim2.new(1, -40, 0, 5)
    closeButton.Text = "❌"
    closeButton.TextScaled = true
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.Font = Enum.Font.GothamBold
    closeButton.Parent = frame

    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy() -- Cierra la GUI
    end)

    -- Alternar visibilidad de la GUI
    local isVisible = true
    toggleButton.MouseButton1Click:Connect(function()
        isVisible = not isVisible
        frame.Visible = isVisible
        toggleButton.Text = isVisible and "📜" or "🔽"
    end)

    -- Título
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0.1, 0)
    title.Text = "AutoPunch"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 22
    title.Parent = frame

    -- Etiqueta de tipo de golpe
    local typeLabel = Instance.new("TextLabel")
    typeLabel.Size = UDim2.new(1, 0, 0.1, 0)
    typeLabel.Position = UDim2.new(0, 0, 0.1, 0)
    typeLabel.Text = "Tipo de golpe: 1"
    typeLabel.TextColor3 = Color3.new(1, 1, 1)
    typeLabel.BackgroundTransparency = 1
    typeLabel.Font = Enum.Font.GothamBold
    typeLabel.TextSize = 20
    typeLabel.Parent = frame

    -- Botones de selección de golpes
    local punchValues = {1, 2, 3, 5, 10, 13, 15, 18, 20}
    local punchAmount = 1

    for i, punches in ipairs(punchValues) do
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0.22, 0, 0.1, 0)
        button.Position = UDim2.new(0.05 + ((i-1) % 4) * 0.25, 0, 0.25 + math.floor((i-1)/4) * 0.12, 0)
        button.Text = tostring(punches)
        button.BackgroundColor3 = Color3.fromRGB(80, 20, 120)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 18
        button.Parent = frame

        button.MouseButton1Click:Connect(function()
            typeLabel.Text = "Tipo de golpe: " .. punches
            punchAmount = punches
        end)
    end

    -- Botón de Estado ON/OFF con cambio de color
    local statusButton = Instance.new("TextButton")
    statusButton.Size = UDim2.new(0.6, 0, 0.1, 0)
    statusButton.Position = UDim2.new(0.2, 0, 0.85, 0)
    statusButton.Text = "Estado: OFF"
    statusButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    statusButton.TextColor3 = Color3.new(1, 1, 1)
    statusButton.Font = Enum.Font.GothamBold
    statusButton.TextSize = 18
    statusButton.Parent = frame

    local active = false
    statusButton.MouseButton1Click:Connect(function()
        active = not active
        statusButton.Text = active and "Estado: ON" or "Estado: OFF"
        statusButton.BackgroundColor3 = active and Color3.fromRGB(0, 200, 100) or Color3.fromRGB(200, 50, 50)
    end)

    -- Función para ejecutar golpes
    local function performPunch()
        if punchEvent and active then
            for i = 1, punchAmount do
                task.spawn(function()
                    punchEvent:FireServer(0.4, 0.1, 1)
                end)
                task.wait(0.02)
            end
        end
    end

    -- Detectar clic izquierdo del mouse (PC y móvil)
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            performPunch()
        end
    end)
end)

RapidSection:NewLabel("RapidPunchButtons")
local Player = game.Players.LocalPlayer
local punchAmounts = {5, 10, 15, 30, 50, 80, 120, 160, 200, 250}
local selectedMode = "Mode Normal" -- Modo por defecto

-- Función para obtener el Backpack actualizado
local function getBackpack()
    return Player:FindFirstChild("Backpack") or Player:WaitForChild("Backpack")
end

-- Dropdown para seleccionar el modo de golpe
RapidSection:NewDropdown("Select Punch", "", {"Mode Normal", "Mode Heavy"}, function(mode)
    selectedMode = mode
end)

-- Crear botones para generar herramientas
for _, amount in ipairs(punchAmounts) do
    RapidSection:NewButton("Punch x" .. amount, "", function()
        local modeAtCreation = selectedMode -- Guarda el modo actual cuando se presiona el botón
        local Backpack = getBackpack() -- Asegurar que tenemos el Backpack actualizado
        
        local tool = Instance.new("Tool")
        tool.Name = modeAtCreation .. " x" .. amount
        tool.RequiresHandle = false

        tool.Activated:Connect(function()
            local power = (modeAtCreation == "Mode Heavy") and 0.4 or 0
            for _ = 1, amount do
                game:GetService("ReplicatedStorage").Events.Punch:FireServer(power, 0.1, 1)
            end
        end)

        tool.Parent = Backpack
    end)
end
RapidSection:NewLabel("Nuclear Punch XD")
-- Variables iniciales
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local char = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = char:WaitForChild("HumanoidRootPart")

-- Crear barra de cooldown
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 0, 0, 10)
frame.Position = UDim2.new(0.5, -100, 0.9, 0)
frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
frame.BorderSizePixel = 0
frame.Visible = false

-- Sonido de explosión
local explosionSound = Instance.new("Sound")
explosionSound.SoundId = "rbxassetid://165969964"
explosionSound.Volume = 900
explosionSound.Name = "ExplosionSound"

-- Función para encontrar el jugador más cercano
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (humanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance >= 10 and distance <= 30 and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    return closestPlayer
end

-- Función para crear la explosión segura con fuego
local function createExplosionAndFire()
    -- Crear la explosión sin daño mortal
    local explosion = Instance.new("Explosion")
    explosion.Position = humanoidRootPart.Position
    explosion.BlastRadius = 10
    explosion.BlastPressure = 500000
    explosion.DestroyJointRadiusPercent = 0 -- No mata
    explosion.Parent = workspace

    -- Crear parte invisible para fuego
    local firePart = Instance.new("Part")
    firePart.Size = Vector3.new(2, 2, 2)
    firePart.Position = humanoidRootPart.Position
    firePart.Anchored = true
    firePart.CanCollide = false
    firePart.Transparency = 1
    firePart.Parent = workspace

    -- Emisor de partículas de fuego
    local fireEmitter = Instance.new("ParticleEmitter")
    fireEmitter.Texture = "rbxassetid://243507177" -- Textura de fuego
    fireEmitter.Rate = 500
    fireEmitter.Lifetime = NumberRange.new(1, 1.5)
    fireEmitter.Speed = NumberRange.new(20, 50)
    fireEmitter.Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 5),
        NumberSequenceKeypoint.new(1, 0)
    })
    fireEmitter.Rotation = NumberRange.new(0, 360)
    fireEmitter.RotSpeed = NumberRange.new(-180, 180)
    fireEmitter.LightEmission = 1
    fireEmitter.Color = ColorSequence.new(Color3.fromRGB(255, 100, 0), Color3.fromRGB(255, 0, 0))
    fireEmitter.Parent = firePart

    -- Destruir fuego luego de unos segundos
    task.delay(3, function()
        firePart:Destroy()
    end)
end

-- Activación de la herramienta
local moving = false

-- Función para crear la herramienta y activar AutoPunch
local function createAutoPunchTool()
    -- Crear herramienta
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "AutoPunch"
    tool.Parent = player.Backpack
    explosionSound.Parent = tool

    tool.Activated:Connect(function()
        if moving then return end -- No permitir si está en cooldown

        local targetPlayer = getClosestPlayer()
        if targetPlayer then
            moving = true
            local targetHRP = targetPlayer.Character:WaitForChild("HumanoidRootPart")

            -- Acercarse al jugador
            while (humanoidRootPart.Position - targetHRP.Position).Magnitude > 5 do
                local direction = (targetHRP.Position - humanoidRootPart.Position).Unit
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + direction * 2
                task.wait()
            end

            -- Cuando esté cerca:
            explosionSound:Play()
            createExplosionAndFire()

            -- Golpear x20 veces rápido
            for i = 1, 100 do
                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                task.wait(0.001) -- Cada 0.001s
            end

            -- Cooldown visual 5s
            frame.Visible = true
            frame.Size = UDim2.new(0, 0, 0, 10)
            for i = 1, 100 do
                frame.Size = UDim2.new(0, i * 2, 0, 10)
                task.wait(5/100)
            end
            frame.Visible = false

            moving = false
        end
    end)
end

-- Crear botón en la UI para activar AutoPunch
RapidSection:NewButton("Punch Explosive", "Activa la herramienta AutoPunch", function()
    createAutoPunchTool()  -- Llamada para crear la herramienta y activar el script completo
end)
-- Variables iniciales
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local char = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = char:WaitForChild("HumanoidRootPart")

-- Crear barra de cooldown
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 0, 0, 10)
frame.Position = UDim2.new(0.5, -100, 0.9, 0)
frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
frame.BorderSizePixel = 0
frame.Visible = false

-- Sonido de explosión
local explosionSound = Instance.new("Sound")
explosionSound.SoundId = "rbxassetid://165969964"
explosionSound.Volume = 1500
explosionSound.Name = "ExplosionSound"

-- Función para encontrar el jugador más cercano
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (humanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance >= 10 and distance <= 30 and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    return closestPlayer
end

-- Función para crear la explosión segura con fuego
local function createExplosionAndFire()
    -- Crear la explosión sin daño mortal
    local explosion = Instance.new("Explosion")
    explosion.Position = humanoidRootPart.Position
    explosion.BlastRadius = 130
    explosion.BlastPressure = 500000
    explosion.DestroyJointRadiusPercent = 0 -- No mata
    explosion.Parent = workspace

    -- Crear parte invisible para fuego
    local firePart = Instance.new("Part")
    firePart.Size = Vector3.new(2, 2, 2)
    firePart.Position = humanoidRootPart.Position
    firePart.Anchored = true
    firePart.CanCollide = false
    firePart.Transparency = 1
    firePart.Parent = workspace

    -- Emisor de partículas de fuego
    local fireEmitter = Instance.new("ParticleEmitter")
    fireEmitter.Texture = "rbxassetid://243507177" -- Textura de fuego
    fireEmitter.Rate = 500
    fireEmitter.Lifetime = NumberRange.new(1, 1.5)
    fireEmitter.Speed = NumberRange.new(20, 50)
    fireEmitter.Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 5),
        NumberSequenceKeypoint.new(1, 0)
    })
    fireEmitter.Rotation = NumberRange.new(0, 360)
    fireEmitter.RotSpeed = NumberRange.new(-180, 180)
    fireEmitter.LightEmission = 1
    fireEmitter.Color = ColorSequence.new(Color3.fromRGB(255, 100, 0), Color3.fromRGB(255, 0, 0))
    fireEmitter.Parent = firePart

    -- Destruir fuego luego de unos segundos
    task.delay(3, function()
        firePart:Destroy()
    end)
end

-- Activación de la herramienta
local moving = false

-- Función para crear la herramienta y activar AutoPunch
local function createAutoPunchTool()
    -- Crear herramienta
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "AutoPunch"
    tool.Parent = player.Backpack
    explosionSound.Parent = tool

    tool.Activated:Connect(function()
        if moving then return end -- No permitir si está en cooldown

        local targetPlayer = getClosestPlayer()
        if targetPlayer then
            moving = true
            local targetHRP = targetPlayer.Character:WaitForChild("HumanoidRootPart")

            -- Acercarse al jugador
            while (humanoidRootPart.Position - targetHRP.Position).Magnitude > 5 do
                local direction = (targetHRP.Position - humanoidRootPart.Position).Unit
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + direction * 2
                task.wait()
            end

            -- Cuando esté cerca:
            explosionSound:Play()
            createExplosionAndFire()

            -- Golpear 40 veces rápido
            for i = 1, 40 do
                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                task.wait(0.001) -- Cada 0.001s
            end

            -- Cooldown visual 5s
            frame.Visible = true
            frame.Size = UDim2.new(0, 0, 0, 10)
            for i = 1, 100 do
                frame.Size = UDim2.new(0, i * 2, 0, 10)
                task.wait(5/100)
            end
            frame.Visible = false

            moving = false
        end
    end)
end

-- Crear botón en la UI para activar AutoPunch
RapidSection:NewButton("Punch Papeador", "Activa la herramienta AutoPunch", function()
    createAutoPunchTool()  -- Llamada para crear la herramienta y activar el script completo
end)
-- Variables iniciales
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local char = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = char:WaitForChild("HumanoidRootPart")

-- Crear barra de cooldown
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 0, 0, 10)
frame.Position = UDim2.new(0.5, -100, 0.9, 0)
frame.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
frame.BorderSizePixel = 0
frame.Visible = false

-- Sonido de explosión
local explosionSound = Instance.new("Sound")
explosionSound.SoundId = "rbxassetid://165969964"
explosionSound.Volume = 3000
explosionSound.Name = "ExplosionSound"

-- Función para encontrar el jugador más cercano
local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (humanoidRootPart.Position - otherPlayer.Character.HumanoidRootPart.Position).Magnitude
            if distance >= 10 and distance <= 30 and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    return closestPlayer
end

-- Función para crear la explosión segura con fuego
local function createExplosionAndFire()
    -- Crear la explosión sin daño mortal
    local explosion = Instance.new("Explosion")
    explosion.Position = humanoidRootPart.Position
    explosion.BlastRadius = 200
    explosion.BlastPressure = 500000
    explosion.DestroyJointRadiusPercent = 0 -- No mata
    explosion.Parent = workspace

    -- Crear parte invisible para fuego
    local firePart = Instance.new("Part")
    firePart.Size = Vector3.new(2, 2, 2)
    firePart.Position = humanoidRootPart.Position
    firePart.Anchored = true
    firePart.CanCollide = false
    firePart.Transparency = 1
    firePart.Parent = workspace

    -- Emisor de partículas de fuego
    local fireEmitter = Instance.new("ParticleEmitter")
    fireEmitter.Texture = "rbxassetid://243507177" -- Textura de fuego
    fireEmitter.Rate = 500
    fireEmitter.Lifetime = NumberRange.new(1, 1.5)
    fireEmitter.Speed = NumberRange.new(20, 50)
    fireEmitter.Size = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 5),
        NumberSequenceKeypoint.new(1, 0)
    })
    fireEmitter.Rotation = NumberRange.new(0, 360)
    fireEmitter.RotSpeed = NumberRange.new(-180, 180)
    fireEmitter.LightEmission = 1
    fireEmitter.Color = ColorSequence.new(Color3.fromRGB(255, 100, 0), Color3.fromRGB(255, 0, 0))
    fireEmitter.Parent = firePart

    -- Destruir fuego luego de unos segundos
    task.delay(3, function()
        firePart:Destroy()
    end)
end

-- Activación de la herramienta
local moving = false

-- Función para crear la herramienta y activar AutoPunch
local function createAutoPunchTool()
    -- Crear herramienta
    local tool = Instance.new("Tool")
    tool.RequiresHandle = false
    tool.Name = "AutoPunch"
    tool.Parent = player.Backpack
    explosionSound.Parent = tool

    tool.Activated:Connect(function()
        if moving then return end -- No permitir si está en cooldown

        local targetPlayer = getClosestPlayer()
        if targetPlayer then
            moving = true
            local targetHRP = targetPlayer.Character:WaitForChild("HumanoidRootPart")

            -- Acercarse al jugador
            while (humanoidRootPart.Position - targetHRP.Position).Magnitude > 5 do
                local direction = (targetHRP.Position - humanoidRootPart.Position).Unit
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + direction * 2
                task.wait()
            end

            -- Cuando esté cerca:
            explosionSound:Play()
            createExplosionAndFire()

            -- Golpear x20 veces rápido
            for i = 1, 100 do
                game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                task.wait(0.001) -- Cada 0.001s
            end

            -- Cooldown visual 5s
            frame.Visible = true
            frame.Size = UDim2.new(0, 0, 0, 10)
            for i = 1, 100 do
                frame.Size = UDim2.new(0, i * 2, 0, 10)
                task.wait(5/100)
            end
            frame.Visible = false

            moving = false
        end
    end)
end

-- Crear botón en la UI para activar AutoPunch
RapidSection:NewButton("Punch Plasma", "Activa la herramienta AutoPunch", function()
    createAutoPunchTool()  -- Llamada para crear la herramienta y activar el script completo
end)
RapidSection:NewLabel("AutoPunch")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PunchEvent = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Punch")

if not PunchEvent then return end -- Verifica que el evento exista

local punchAmounts = {5, 10, 15, 20} -- Opciones de golpes
local punchModes = {
    {name = "Suave", power = 0},
    {name = "Fuerte", power = 0.4}
}

-- Etiqueta para golpes suaves
RapidSection:NewLabel("Punch Normal -- AutoPunch")
for _, amount in ipairs(punchAmounts) do
    RapidSection:NewToggle("AutoPunch Normal x" .. amount, "", function(state)
        getgenv()["autoPunch_Suave" .. amount] = state
        if state then
            task.spawn(function()
                while getgenv()["autoPunch_Suave" .. amount] do
                    for i = 1, amount do
                        PunchEvent:FireServer(0, 0.1, 1)
                    end
                    task.wait(1.5) -- Se repite cada 1.5 segundos
                end
            end)
        end
    end)
end

-- Etiqueta para golpes fuertes
RapidSection:NewLabel("Punch Heavy -- AutoPunch")
for _, amount in ipairs(punchAmounts) do
    RapidSection:NewToggle("AutoPunch Heavy x" .. amount, "", function(state)
        getgenv()["autoPunch_Fuerte" .. amount] = state
        if state then
            task.spawn(function()
                while getgenv()["autoPunch_Fuerte" .. amount] do
                    for i = 1, amount do
                        PunchEvent:FireServer(0.4, 0.1, 1)
                    end
                    task.wait(1.5) -- Se repite cada 1.5 segundos
                end
            end)
        end
    end)
end
RapidSection:NewLabel("KillAura")
RapidSection:NewToggle("Kill Aura", "", function(state)
    if state then
        -- Variables globales para controlar el estado
        getgenv().attackPlayer = true
        local player = game.Players.LocalPlayer
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            spawn(function()
                while getgenv().attackPlayer do
                    -- Enviar eventos de ataque al servidor
                    for i = 1, 30 do  -- Realiza el ataque 10 veces por iteración para mayor efecto
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                        task.wait(0.3)
                    end
                    task.wait(3)
                end
            end)
        end
    else
        getgenv().attackPlayer = false
    end
end)
RapidSection:NewToggle("Kill Aura (Heavy)", "", function(state)
    if state then
        -- Variables globales para controlar el estado
        getgenv().attackPlayer = true
        local player = game.Players.LocalPlayer
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            spawn(function()
                while getgenv().attackPlayer do
                    -- Enviar eventos de ataque al servidor
                    for i = 1, 30 do  -- Realiza el ataque 10 veces por iteración para mayor efecto
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                        task.wait(0.3)
                    end
                    task.wait(3)
                end
            end)
        end
    else
        getgenv().attackPlayer = false
    end
end)
RapidSection:NewToggle("Kill Aura [Mixto]", "", function(state)
    if state then
        -- Variables globales para controlar el estado
        getgenv().attackPlayer = true
        local player = game.Players.LocalPlayer
        local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            -- Primer hilo para el primer ataque
            spawn(function()
                while getgenv().attackPlayer do
                    -- Enviar el primer evento de ataque al servidor
                    for i = 1, 30 do  -- Realiza el ataque 10 veces por iteración
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0, 0.1, 1)
                        task.wait(0.3)
                    end
                    task.wait(3)  -- Espera 0.5 segundos antes de la siguiente iteración
                end
            end)

            -- Segundo hilo para el segundo ataque
            spawn(function()
                while getgenv().attackPlayer do
                    -- Enviar el segundo evento de ataque al servidor
                    for i = 1, 25 do  -- Realiza el ataque 15 veces por iteración
                        game:GetService("ReplicatedStorage").Events.Punch:FireServer(0.4, 0.1, 1)
                        task.wait(0.3)
                    end
                    task.wait(0.5)  -- Espera 0.5 segundos antes de la siguiente iteración
                end
            end)
        end
    else
        getgenv().attackPlayer = false
    end
end)
-- Botón para eliminar todas las herramientas
RapidSection:NewButton("Clear Tools", "", function()
    local Backpack = getBackpack() -- Obtener el Backpack actualizado
    for _, tool in ipairs(Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            tool:Destroy()
        end
    end
end)
RapidSection:NewLabel("Entre mas energia mas eficiencia")
KSection:NewLabel("Script KeyBoard")
KSection:NewButton("Keyboard Script", "", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Xxtan31/Ata/main/deltakeyboardcrack.txt", true))()
end);
KSection:NewLabel("Other KeyBind")
KSection:NewKeybind("MetalSkin", "", Enum.KeyCode['LeftShift'], function()
	if (_G.metalskin == false) then
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", true);
		_G.metalskin = true;
	else
		game:GetService("ReplicatedStorage").Events.Transform:FireServer("metalSkin", false);
		_G.metalskin = false;
	end
end);
KSection:NewKeybind("Carry Player", "", Enum.KeyCode['H'], function()
	if (_G.CToggle == false) then
		spawn(function()
			getNearPlayer(99);
			wait();
			_G.CToggle = true;
			getgenv().CarryP = true;
			while CarryP do
				wait();
				spawn(function()
					for i, v in pairs(plrlist) do
						if (v == player) then
						else
							Xt = player.Character.HumanoidRootPart.Position['X'];
							Yt = player.Character.HumanoidRootPart.Position['Y'];
							Zt = player.Character.HumanoidRootPart.Position['Z'];
							game:GetService("Workspace")[v.Name].HumanoidRootPart.telekinesisPosition.Position = Vector3.new(Xt, Yt + 8, Zt + 5);
						end
					end
				end);
			end
		end);
	else
		spawn(function()
			_G.CToggle = false;
			plrlist = {};
			getgenv().CarryP = false;
		end);
	end
end);
KSection:NewKeybind("Telekinesis Lock", "", Enum.KeyCode['T'], function()
	spawn(function()
		local LookVector = game.Workspace.Camera.CFrame.LookVector;
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, true);
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(LookVector, false);
	end);
end);
KSection:NewKeybind("Telekinesis kill", "", Enum.KeyCode['G'], function()
	spawn(function()
		getNearPlayer(99);
		for i, v in pairs(plrlist) do
			if (v == player) then
			else
				spawn(function()
					v.Head.Neck:Destroy();
					plrlist = {};
					wait(0.2);
					spawn(function()
						game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[v.Name].Character);
					end);
				end);
			end
		end
	end);
end);
KSection:NewKeybind("Teleport To Target", "", Enum.KeyCode.O, function()
	local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
	p1.CFrame = game.Players[_G.tplayer].Character.HumanoidRootPart.CFrame
	breakvelocity()
end);

KSection:NewKeybind("Teleport To Motel", "", Enum.KeyCode.L, function()
	if (_G.bring == true) then
		game:GetService("Workspace")[_G.teleportplayer].HumanoidRootPart.telekinesisPosition:Destroy()
		game:GetService("Workspace")[_G.teleportplayer].HumanoidRootPart.CFrame = CFrame.new(-1745, 95, -1530);
		wait(0.2)
		game:GetService("ReplicatedStorage").Events.ToggleTelekinesis:InvokeServer(Vector3.new(1, 1, 1), false, game.Players[_G.teleportplayer].Character);
	else
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1745, 95, -1530);
	end
	breakvelocity();
end);
KSection:NewKeybind("Toggle UI", "", Enum.KeyCode.Nine, function()
	Library:ToggleUI();
end);
local script = loadstring(game:HttpGet('https://raw.githubusercontent.com/KermanEstudios2/KaseKaki/refs/heads/main/Hierva_Luisa21'))()
GSection:NewButton("Infinite Yield", "", function()
	loadstring(game:HttpGet("https://pastebin.com/raw/aCmksbMy"))();
end);
GSection:NewButton("Chat Spammer", "", function()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/ColdStep2/Chatdestroyer-Hub-V1/main/Chatdestroyer%20Hub%20V1'),true))()
end);
GSection:NewButton("Dex/Explorer", "", function()
	loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
end);
GSection:NewButton("Chat Spoofer", "", function()
	loadstring(game:HttpGet(('https://pastebin.com/raw/djBfk8Li'),true))()
end);
GSection:NewButton("Chat bypasser", "", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/synnyyy/synergy/additional/betterbypasser", true))()
end);
GSection:NewButton("Adonis Bypass", "", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua", true))()
end);
local script = loadstring(game:HttpGet('https://raw.githubusercontent.com/KermanEstudios2/TrucosGratuitos/refs/heads/main/WPPTS%20WBHK'))()
GSection:NewButton("KeyBoard Source", "", function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/GGH52lan/GGH52lan/main/keyboard.txt", true))()
end);
GSection:NewButton("Admin Pack", "Al accionarlo apareceran mucho panelas admin", function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
-- INFINITE YIELD
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Denverrz/scripts/master/PRISONWARE_v1.3.txt'),true))()
-- PRISONWARE GUI
loadstring(game:HttpGet(('https://pastebin.com/raw/KA7xFcbL'),true))()
-- -- Admin commands
loadstring(game:HttpGet(('https://raw.githubusercontent.com/h17s3/TIGERADMIN/main/TIGERADMINSCRIPTFREE'),true))()
--TIGER ADMIN
loadstring(game:HttpGet(('https://pastebin.com/raw/KA7xFcbL'),true))()
-- - Admin commands Repeat script, gurantee work
-- THE BEST ROBLOX PRISON LIFE (CARS FIXED!) SCRIPT EXPLOIT - MADE BY OPERATOR
---THANK YOU TO ALL THE CREATORS OF THESE SCRIPTS, ALL CREDIT GOES TO THEM
end)
GSection:NewButton("FE Emote", "All Emotes Keybind Open Is Comma" , function()
	--keybind to open is comma
	loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Gi7331/scripts/main/Emote.lua"))()
end)
GSection:NewButton("Nameless Admin", "", function()
loadstring(game:HttpGet("https://gist.github.com/inuk84/ca841931f45f242c945405298b26bd71/raw/af364e5d4ea5b0d2eac404a5376d83c84a23cbe4/na.lua", true))()
end);

--NotificacionesTIoHelmoso
local function notifyUser()
    local function callback(Text)
    end

    local NotificationBindable = Instance.new("BindableFunction")
    NotificationBindable.OnInvoke = callback

    game.StarterGui:SetCore("SendNotification", {
        Title = "TioHelmoso ha sido ejecutado";
        Text = "Gracias por preferir de mi calidad 🥵🙏";
        Duration = 5;
        Callback = NotificationBindable
    })
end

notifyUser()

local MainSection = Tab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local TargetSection = TargetTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local RapidSection = RapidTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local SSection = STab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local StatSection = StatTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local TSection = TTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local MSection = MTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local CrashSection = CrashTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local KSection = KTab:NewSection("| "..game.Players.LocalPlayer.Name.." |");
local ERSection = ERTab:NewSection("| "..game.Players.LocalPlayer.Name.." |")

